library(geobr)
library(ggplot2)
library(sf)
library(stars)
library(rnaturalearth)
library(rgeos)
library(gstat)
library(fields)
library(ggspatial)
library(rgdal)
install.packages("openssl")
# Baixando mapa do Paraná
pr<- read_state(code_state = 'PR')
# Selecionando área de trabalho
setwd("//wsl.localhost/Ubuntu-20.04/home/laryssastephanie/workspace/sprint-3-tmg")
#Lendo arquivo csv
dados.pr <- read.csv('data/dados_hist_clima_concatenados/INMET_S_PR_MEDIA_01-01-2006_A_30-11-2021.CSV')
View(pr)
View(pr)
#Deixando so dados georeferenciados
dados.pr.sf <- st_as_sf(dados.pr,coords = c('LATITUDE', 'LONGITUDE'), crs=4674)
# Criando a grade/malha
grade.pr <- st_make_grid(pr,cellsize = c(.07,.07)) %>%
st_as_sf()
grade.pr = grade.pr[pr, ]
#PLOTANDO A GRADE
ggplot() +
geom_sf(data=grade.pr, size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_bw()
names(dados.pr)
View(dados.pr.sf)
#IDW
modelo <- gstat(formula = TEMPERATURA.DO.AR...BULBO.SECO..HORARIA..Â.C.~1,
data = as(dados.pr.sf,'Spatial'),
set = list(idp=3))
#realizando a interpolação
temp_ar.int <- predict(modelo,as(grade.pr,'Spatial')) %>%
st_as_sf()
warnings()
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color=temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
ggplot(dados.pr.sf)+
geom_sf(aes(color=temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
temp_ar.int <- predict(modelo,as(grade.pr,'Spatial')) %>%
st_as_sf()
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(temp_ar.int)
View(modelo)
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color=temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color=temp_ar.int), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color=temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = ''), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = 'black'), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
temp_ar
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_ar), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
library(geobr)
library(ggplot2)
library(sf)
library(stars)
library(rnaturalearth)
library(rgeos)
library(gstat)
library(fields)
library(ggspatial)
library(rgdal)
# Baixando mapa do Paraná
pr<- read_state(code_state = 'PR')
# Selecionando área de trabalho
setwd("//wsl.localhost/Ubuntu-20.04/home/laryssastephanie/workspace/sprint-3-tmg")
#Lendo arquivo csv
dados.pr <- read.csv('data/dados_hist_clima_concatenados/INMET_S_PR_MEDIA_01-01-2006_A_30-11-2021.CSV')
#Deixando so dados georeferenciados
dados.pr.sf <- st_as_sf(dados.pr,coords = c('LATITUDE', 'LONGITUDE'), crs=4674)
# Criando a grade/malha
grade.pr <- st_make_grid(pr,cellsize = c(.05,.05)) %>%
st_as_sf()
grade.pr = grade.pr[pr, ]
#PLOTANDO A GRADE
ggplot() +
geom_sf(data=grade.pr, size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_bw()
# Criando a grade/malha
grade.pr <- st_make_grid(pr,cellsize = c(.08,.08)) %>%
st_as_sf()
grade.pr = grade.pr[pr, ]
#PLOTANDO A GRADE
ggplot() +
geom_sf(data=grade.pr, size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_bw()
names(dados.pr)
#IDW
modelo <- gstat(formula = RADIACAO.GLOBAL..KJ.mÂ².~1,
data = as(dados.pr.sf,'Spatial'),
set = list(idp=3))
#realizando a interpolação
temp_max.int <- predict(modelo,as(grade.pr,'Spatial')) %>%
st_as_sf()
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_max), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = Null), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = NULL), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
View(temp_max.int)
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_max.geometry), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(colour = temp_max), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_max), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = temp_max), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
View(grade.pr)
View(dados.pr.sf)
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = RADIACAO.GLOBAL..KJ.mÂ²), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
View(dados.pr.sf)
names(dados.pr)
#IDW
modelo <- gstat(formula = TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.~1,
data = as(dados.pr.sf,'Spatial'),
set = list(idp=3))
#realizando a interpolação
TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C..int <- predict(modelo,as(grade.pr,'Spatial')) %>%
st_as_sf()
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
View(dados.pr.sf)
View(modelo)
View(TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C..int)
View(TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C..int)
View(dados.pr.sf)
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = PRECIPITAÃ.ÃƒO.TOTAL..HORÃ.RIO..mm.), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.
#PLOTANDO OS PONTOS DO CSV
ggplot(dados.pr.sf)+
geom_sf(aes(color = TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.), cex= 2.0)+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title="Dados Observados",
color= "Temperatura do Ar")
# PLOTANDO DADOS INTERPOLADOS
ggplot(temp_max.int)+
geom_sf(aes(fill=var1.pred,col=var1.pred))+
geom_sf(data = pr, fill='transparent')+
scale_color_gradientn(colors = tim.colors(20))+
scale_fill_gradientn(colors = tim.colors(20))+
annotation_scale(location='bl')+
annotation_north_arrow(location='tl',
style = north_arrow_nautical,
height = unit(1.8,"cm"),
width = unit(1.8,"cm"))+
theme_bw()+
labs(title = "Dados Interpolados",
color = "Temperatura do Ar",
fill= "Temperatura do Ar")
#IDW
modelo <- gstat(formula = TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.~1,
data = as(dados.pr.sf,'Spatial'),
set = list(idp=10))
library(geobr)
library(ggplot2)
library(sf)
library(stars)
library(rnaturalearth)
library(rgeos)
library(gstat)
library(fields)
library(ggspatial)
library(rgdal)
# Baixando mapa do Paraná
pr<- read_state(code_state = 'PR')
# Selecionando área de trabalho
setwd("//wsl.localhost/Ubuntu-20.04/home/laryssastephanie/workspace/sprint-3-tmg")
#Lendo arquivo csv
dados.pr <- read.csv('data/dados_hist_clima_concatenados/INMET_S_PR_MEDIA_01-01-2006_A_30-11-2021.CSV')
#Deixando so dados georeferenciados
dados.pr.sf <- st_as_sf(dados.pr,coords = c('LATITUDE', 'LONGITUDE'), crs=4674)
# Criando a grade/malha
grade.pr <- st_make_grid(pr,cellsize = c(.08,.08)) %>%
st_as_sf()
grade.pr = grade.pr[pr, ]
#PLOTANDO A GRADE
ggplot() +
geom_sf(data=grade.pr, size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_bw()
names(dados.pr)
#IDW
modelo <- gstat(formula = TEMPERATURA.MÃ.NIMA.NA.HORA.ANT...AUT...Â.C.~1,
data = as(dados.pr.sf,'Spatial'),
set = list(idp=10))
#realizando a interpolação
temp.int <- predict(modelo,as(grade.pr,'Spatial')) %>%
st_as_sf()
View(dados.pr.sf)
library(sp)       # pacote para chamar shapes
library(maptools) # pacote para editar mapas
library(raster)   # pacote para chamar rasteres
library(gstat)    # pacote geoestatistica
library(graphics)
library(lattice)
# Selecionando área de trabalho
setwd("//wsl.localhost/Ubuntu-20.04/home/laryssastephanie/workspace/sprint-3-tmg/sprint-3")
#Lendo arquivo de dados de argila
dados <- read.csv('data/dados_hist_clima_concatenados/INMET_S_PR_MEDIA_GERAL_OUTUBRO_UTM_01-01-2006_A_30-11-2021.CSV')
coordinates(dados) <- ~X+Y
names(dados.pr)
#Inicio da Analise Variografica
vari.E <- variogram(TEMPERATURA.DO.AR...BULBO.SECO..HORARIA..Â.C.~1, dados)
#Plotando o Variografico
plot(vari.E,pch=16,col=1)  #pch: Formato - Col: Cores
#Modelando Semivariograma
model.E <- fit.variogram(object = vari.E, model=vgm(psill = 2, nugget = 1, range = 100000, model = "Exp"))
#Modelando Semivariograma
model.E <- fit.variogram(object = vari.E, model=vgm(psill = 2, nugget = 1, range = 120000, model = "Exp"))
